using Unity.Burst;
using Unity.Entities;
using UnityEngine;
using UWBB.Components;

namespace UWBB.Systems
{
    public partial struct InvulnerabilityTimerSystem : ISystem
    {
        [BurstCompile]
        public void OnCreate(ref SystemState state)
        {
            state.RequireForUpdate<InvulnerableComponent>();
        }

        [BurstCompile]
        public void OnUpdate(ref SystemState state)
        {
            foreach (RefRW<InvulnerableComponent> obj in SystemAPI.Query<RefRW<InvulnerableComponent>>())
            {
                if (obj.ValueRO.invulnerable)
                    obj.ValueRW.timer += Time.deltaTime;
                
                if (obj.ValueRO.timer >= obj.ValueRO.duration)
                {
                    obj.ValueRW.timer = 0;
                    obj.ValueRW.invulnerable = false;
                }
            }
        }
    }
}